## Python 스크립트 생성 요청: 대화형 어휘 학습 HTML 뷰어 (파일 입출력)

**목표:**
지정된 폴더에서 `word_table.json` (단어 참조 데이터) 파일과 `stories.json` (여러 챕터로 구성된 스토리 데이터) 파일을 읽어, 단어 학습 기능이 포함된 단일 오프라인 HTML 파일을 생성하는 Python 스크립트(`story_viewer_generator.py`)를 작성해주세요. 생성된 HTML은 iOS 웹뷰 환경에서도 완벽하게 동작해야 하며, 출력 파일명은 명령줄 인자로 지정 가능해야 합니다.

**Python 스크립트 실행 방식:**

스크립트는 다음 명령줄 인자를 받아 실행됩니다:

```bash
python story_viewer_generator.py <word_table_폴더_경로> <stories_폴더_경로> <출력_HTML_파일명>
```

* `<word_table_폴더_경로>`: `word_table.json` 파일이 위치한 폴더의 경로입니다.
* `<stories_폴더_경로>`: `stories.json` 파일이 위치한 폴더의 경로입니다.
* `<출력_HTML_파일명>`: 생성될 HTML 파일의 이름입니다 (예: `output_story.html`).

**예시 폴더 구조:**

```
프로젝트_폴더/
├── word_table/
│   └── word_table.json
├── stories/
│   └── stories.json
└── story_viewer_generator.py
```

**입력 파일 상세:**

1.  **`word_table.json` 파일:**
    * 지정된 `<word_table_폴더_경로>` 내에 위치합니다.
    * JSON 객체 형식이며, 최상위 키는 `"words"`이고, 값은 단어 객체들의 리스트입니다.
    * 각 단어 객체 구조:
        ```json
        {
          "num": "0", // 순번 (문자열, 현재 스크립트에서 직접 사용은 안함)
          "id": "_abreast", // HTML 내 고유 식별자 (문자열)
          "term": "abreast", // 영어 단어/숙어 (문자열)
          "synonyms": ["alongside", "in a row"], // 동의어 목록 (문자열 리스트)
          "kor_meaning": "나란히" // 한국어 뜻 (문자열)
        }
        ```

2.  **`stories.json` 파일:**
    * 지정된 `<stories_폴더_경로>` 내에 위치합니다.
    * JSON 객체 형식이며, 최상위 키는 `"stories"`이고, 값은 챕터 객체들의 리스트입니다.
    * 각 챕터 객체 구조:
        ```json
        {
          "chapter_title": "The Cartographer's Secret", // 챕터 제목 (문자열)
          "chapter_num": 0, // 챕터 번호 (정수, 0부터 시작 가능)
          "story_sentences": [ // 문장 쌍들의 리스트
            {
              "english": "Elara, a young historian, examined the <word id='_archaic' class='word-eng-link'>archaic</word> map...", // 영어 문장 (문자열)
              "korean": "젊은 역사학자 엘라라는 <word id='_archaic' class='word-target-kr'>고대의</word> 지도를 살폈는데..." // 한국어 번역 문장 (문자열)
            }
            // ... 추가 문장 쌍들
          ]
        }
        ```
    * 영어 및 한국어 문장 내에는 각각 `<word id='...' class='word-eng-link'>단어</word>` 및 `<word id='...' class='word-target-kr'>단어</word>` 형식의 태그가 포함될 수 있습니다.

**Python 스크립트 주요 기능:**

1.  **명령줄 인자 처리:**
    * `argparse` 모듈을 사용하여 세 개의 명령줄 인자(단어 테이블 폴더 경로, 스토리 폴더 경로, 출력 HTML 파일명)를 처리합니다.
    * 필수 인자가 누락된 경우 적절한 사용법 메시지를 표시하고 종료합니다.

2.  **입력 데이터 파일 읽기 및 처리:**
    * 제공된 경로에서 `word_table.json`과 `stories.json` 파일을 읽어옵니다.
    * 파일 읽기 오류(예: 파일 없음, 권한 문제) 발생 시 적절한 에러 메시지를 출력하고 종료합니다.
    * JSON 파싱 오류 발생 시 에러 메시지를 출력하고 종료합니다.
    * JSON 파일 내의 비표준 공백(예: `\u00a0`)을 표준 공백으로 자동 치환하여 파싱 오류를 방지합니다.
    * 스토리 데이터에서 챕터 객체의 `chapter_num`이 누락되었거나 유효하지 않은 정수가 아닐 경우, 스크립트는 해당 챕터의 리스트 내 인덱스(0부터 시작)를 `chapter_num`으로 사용하거나, 사용자에게 경고를 표시하고 기본값을 할당합니다.

3.  **단일 HTML 파일 생성:**
    * 모든 CSS, JavaScript, 그리고 동적으로 생성된 HTML 콘텐츠를 포함하는 단일 `.html` 파일을 명령줄 인자로 지정된 `<출력_HTML_파일명>`으로 저장합니다.
    * 생성된 HTML 파일은 인터넷 연결 없이도 완벽하게 작동해야 합니다 (오프라인 지원).

4.  **HTML 페이지 레이아웃 및 기능 (이전 프롬프트와 동일):**
    * **챕터 네비게이션:** 페이지 상단 버튼, 현재 챕터 활성화 스타일 적용.
    * **번역 토글 버튼:** "번역 보기/숨기기" 기능 및 텍스트 변경.
    * **챕터 콘텐츠 표시:** 챕터 제목, 영어 문단, 한국어 문단(초기 숨김) 표시.
        * 영어 문장 내 `<word id='...' class='word-eng-link'>...`는 클릭 가능한 `<a>` 태그로 변환.
        * 한국어 문장 내 `<word id='...' class='word-target-kr'>...`는 `<span>` 태그로 변환 및 스타일 적용.
        * 클릭 가능한 영어 단어 및 한국어 대상 단어에 눈에 띄는 스타일 적용.

5.  **어휘 팝업 (CSS Only 구현, 이전 프롬프트와 동일):**
    * `word-eng-link` 클릭 시 CSS `:target`을 이용한 팝업 표시.
    * 팝업 내용: 단어(`term`), 한국어 뜻(`kor_meaning`), 동의어(`synonyms`).
    * 팝업 동작: 다른 단어 클릭 시 이전 팝업 닫고 새 팝업 표시, 외부 클릭 또는 '×' 버튼 클릭 시 팝업 닫힘.
    * 팝업 스타일: 모달 형태, 반투명 오버레이, 깔끔한 디자인, 부드러운 등장 애니메이션.

6.  **Python 스크립트 내부 로직 (파일 처리 반영):**
    * 파일에서 읽어온 JSON 데이터를 파싱하여 Python 딕셔너리/리스트로 변환합니다.
    * 모든 CSS 스타일, HTML 구조, JavaScript 로직을 동적으로 생성하여 하나의 문자열로 결합합니다.
    * 스토리 데이터의 영어 및 한국어 문장 내에 포함된 커스텀 `<word>` 태그를 Python단에서 미리 처리하여, JavaScript에는 표준 HTML 태그 (`<a>` 또는 `<span>`)로 변환된 형태로 전달합니다.
    * `word-eng-link`의 `id`와 `word_table.json`의 단어 `id`를 매칭하여 각 팝업의 내용을 정확히 생성합니다.
    * `word_table.json` 내에 중복된 `id`가 있을 경우, 가장 마지막에 등장하는 항목을 기준으로 팝업 정보를 생성합니다.

7.  **언어 및 스타일링 (이전 프롬프트와 동일):**
    * HTML `lang` 속성은 `'ko'`로 설정합니다.
    * 페이지 제목, 버튼 텍스트, 팝업 내 레이블 등 사용자 인터페이스 요소는 한국어로 표시합니다.
    * 전체적인 페이지 디자인은 현대적이고 사용자 친화적이며, 가독성이 높아야 합니다. CSS는 `<head>` 내 `<style>` 태그 안에 포함시킵니다.

**요약:**
사용자는 명령줄을 통해 단어장 파일(`word_table.json`)과 스토리 파일(`stories.json`)의 위치, 그리고 출력될 HTML 파일명을 지정하여, 오프라인에서 작동하고 단어의 뜻과 동의어를 팝업으로 보여주는 대화형 학습 도구를 생성할 수 있는 Python 스크립트(`story_viewer_generator.py`)를 원합니다.
