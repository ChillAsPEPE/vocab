<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kelly의 어휘 학습</title>
    <style>
        /* 기본 스타일 */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans KR', sans-serif; line-height: 1.6; color: #333; background-color: #f8f9fa; }
        body.no-scroll { overflow: hidden; }

        /* 레이아웃 */
        .container { max-width: 1000px; margin: 0 auto; padding: 20px; }
        .header { background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); margin-bottom: 20px; }
        .content { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }

        /* 내비게이션 & 컨트롤 */
        .navigation-controls { display: flex; flex-direction: column; gap: 15px; margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px; }
        .nav-button-group { display: flex; align-items: center; gap: 10px; }
        .chapter-links-container { display: flex; flex-wrap: wrap; align-items: center; gap: 6px; }
        .nav-label { font-weight: 600; color: #495057; font-size: 14px; margin-right: 9px; }

        /* 버튼 스타일 */
        .toggle-btn { background: #6c757d; color: white; border: none; padding: 8px 16px; border-radius: 20px; font-size: 12px; cursor: pointer; transition: all 0.3s ease; white-space: nowrap; }
        .toggle-btn:hover { background: #5a6268; }
        .toggle-btn.active-btn { background-color: #007bff; color: white; }
        
        /* 챕터 링크 */
        .chapter-link { display: inline-block; padding: 5px; text-decoration: none; color: #007bff; border: none; border-bottom: 1px solid #007bff; font-weight: 500; font-size: 10px; transition: all 0.3s ease; min-width: 25px; text-align: center; }
        .chapter-link:hover, .chapter-link.active { background: #007bff; color: white; border-bottom-color: white; transform: scale(1.1); }

        /* 본문 내용 */
        .chapter-content h2 { color: #2c3e50; margin-bottom: 30px; text-align: center; font-size: 28px; border-bottom: 3px solid #007bff; padding-bottom: 10px; }
        .sentence-pair { margin-bottom: 25px; }
        .english-text { font-size: 18px; line-height: 1.8; margin-bottom: 10px; color: #2c3e50; }
        .korean-text { font-size: 16px; line-height: 1.7; color: #666; font-style: italic; background: #f8f9fa; padding: 10px 15px; border-left: 4px solid #007bff; border-radius: 0 5px 5px 0; }
        
        /* ★★★ 복원된 부분: 단어 하이퍼링크 및 강조 스타일 ★★★ */
        .word-link { color: #007bff; font-weight: 600; padding: 2px 4px; border-radius: 3px; background: rgba(0, 123, 255, 0.1); cursor: pointer; transition: all 0.3s ease; text-decoration: underline; }
        .word-link:hover { background: rgba(0, 123, 255, 0.3); transform: scale(1.05); }
        .word-target-kr { color: #dc3545; font-weight: 600; padding: 2px 4px; border-radius: 3px; background: rgba(220, 53, 69, 0.1); }

        /* 바텀 시트(Bottom Sheet) 스타일 */
        .bottom-sheet-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.4); z-index: 1000; display: flex; justify-content: center; align-items: flex-end; opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease; }
        .bottom-sheet-overlay.show { opacity: 1; visibility: visible; }
        .bottom-sheet-panel { background-color: white; width: 100%; max-width: 1000px; height: 65vh; border-radius: 16px 16px 0 0; box-shadow: 0 -4px 20px rgba(0,0,0,0.15); transform: translateY(100%); transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1); display: flex; flex-direction: column; }
        .bottom-sheet-overlay.show .bottom-sheet-panel { transform: translateY(0); }
        .bottom-sheet-header { padding: 10px 20px; border-bottom: 1px solid #e9ecef; display: flex; justify-content: space-between; align-items: center; flex-shrink: 0; }
        .bottom-sheet-title { font-size: 16px; font-weight: 600; }
        .bottom-sheet-content { padding: 0 20px 20px 20px; overflow-y: auto; }
        .word-table { width: 100%; border-collapse: collapse; font-size: 14px; }
        .word-table th { position: sticky; top: -1px; background-color: white; z-index: 1; border-bottom: 2px solid #dee2e6; padding: 10px; text-align: left; font-weight: 600; }
        .word-table td { padding: 10px; border-bottom: 1px solid #dee2e6; text-align: left; }
        .word-table tbody tr:nth-child(even) { background-color: #f8f9fa; }
        .index-item { display: flex; align-items: center; padding: 12px 0; border-bottom: 1px solid #f1f3f4; cursor: pointer; transition: all 0.2s ease; }
        .index-item:hover { background: #f8f9fa; }
        .index-item:last-child { border-bottom: none; }
        .index-number { font-weight: 600; color: #007bff; margin-right: 12px; min-width: 25px; }
        .index-title { color: #495057; font-size: 14px; }

        /* 단어 정보 팝업 스타일 */
        .popup-overlay { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 2000; animation: fadeIn 0.3s ease; }
        .popup-overlay.show { display: flex; align-items: center; justify-content: center; }
        .popup-content { background: white; max-width: 400px; width: 90%; border-radius: 15px; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3); animation: slideIn 0.3s ease; position: relative; }
        .popup-header { display: flex; justify-content: space-between; align-items: center; padding: 20px 25px 10px; border-bottom: 2px solid #f1f3f4; }
        .popup-header h3 { color: #007bff; font-size: 24px; margin: 0; }
        .close-btn { background: none; border: none; color: #999; font-size: 28px; font-weight: bold; cursor: pointer; transition: color 0.3s ease; padding: 0; line-height: 1; }
        .close-btn:hover { color: #333; }
        .popup-body { padding: 20px 25px 25px; }
        .popup-body p { margin-bottom: 15px; font-size: 16px; line-height: 1.5; }
        .popup-body p:last-child { margin-bottom: 0; }
        .popup-body strong { color: #2c3e50; }
        @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
        @keyframes slideIn { from { transform: translateY(-50px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
    </style>
</head>
<body>
    <div class="content">
        <div class="header">
            <div class="navigation-controls">
                <div class="nav-button-group">
                    <button id="translation-toggle-btn" class="toggle-btn" onclick="toggleTranslation()">번역 보기</button>
                    <button id="index-toggle-btn" class="toggle-btn" onclick="toggleIndex()">목차 보기</button>
                    <button id="word-list-toggle-btn" class="toggle-btn" onclick="toggleWordList()">단어 목록 보기</button>
                </div>
                <div class="chapter-links-container">
                    <span class="nav-label">Chapters:</span>
                    <%- number_navigation %>
                </div>
            </div>
            
            <%- chapters_html %>
        </div>
    </div>

    <div id="indexNavigationTemplate" style="display: none;"><%- index_navigation %></div>
    <div id="wordListNavigationTemplate" style="display: none;"></div>

    <div id="wordPopupOverlay" class="popup-overlay">
        <div class="popup-content">
            <div class="popup-header"><h3 id="popupTerm">단어</h3><button class="close-btn" onclick="closePopup()">&times;</button></div>
            <div class="popup-body"><p id="popupMeaning"><strong>뜻:</strong> </p><p id="popupSynonyms" style="display: none;"><strong>동의어:</strong> </p></div>
        </div>
    </div>

    <div id="bottomSheet" class="bottom-sheet-overlay">
        <div class="bottom-sheet-panel">
            <div class="bottom-sheet-header">
                <h3 id="bottomSheetTitle" class="bottom-sheet-title"></h3>
                <button class="close-btn" onclick="closeSheet()">&times;</button>
            </div>
            <div id="bottomSheetContent" class="bottom-sheet-content"></div>
        </div>
    </div>

    <script>
        const wordData = <%- word_data_js %>;
        const allWords = <%- all_words_json %>;
        let translationVisible = false;

        const bottomSheet = document.getElementById('bottomSheet');
        const bottomSheetTitle = document.getElementById('bottomSheetTitle');
        const bottomSheetContent = document.getElementById('bottomSheetContent');
        let currentSheet = null;

        function openSheet(type) {
            const indexBtn = document.getElementById('index-toggle-btn');
            const wordListBtn = document.getElementById('word-list-toggle-btn');
            
            if (bottomSheet.classList.contains('show') && currentSheet === type) {
                closeSheet();
                return;
            }

            if (type === 'index') {
                bottomSheetTitle.textContent = '목차';
                bottomSheetContent.innerHTML = document.getElementById('indexNavigationTemplate').innerHTML;
                indexBtn.classList.add('active-btn');
                wordListBtn.classList.remove('active-btn');
            } else if (type === 'word') {
                bottomSheetTitle.textContent = '단어 목록';
                bottomSheetContent.innerHTML = document.getElementById('wordListNavigationTemplate').innerHTML;
                wordListBtn.classList.add('active-btn');
                indexBtn.classList.remove('active-btn');
            }

            currentSheet = type;
            bottomSheet.classList.add('show');
            document.body.classList.add('no-scroll');
        }

        function closeSheet() {
            bottomSheet.classList.remove('show');
            document.body.classList.remove('no-scroll');
            document.getElementById('index-toggle-btn').classList.remove('active-btn');
            document.getElementById('word-list-toggle-btn').classList.remove('active-btn');
            currentSheet = null;
        }

        function toggleIndex() { openSheet('index'); }
        function toggleWordList() { openSheet('word'); }
        
        function showChapter(chapterIndex) {
            closeSheet();
            const chapters = document.querySelectorAll('.chapter-content');
            chapters.forEach(chapter => { chapter.style.display = 'none'; });
            const links = document.querySelectorAll('.chapter-link');
            links.forEach(link => { link.classList.remove('active'); });
            const selectedChapter = document.getElementById('chapter-' + chapterIndex);
            if (selectedChapter) {
                selectedChapter.style.display = 'block';
                const koreanTexts = selectedChapter.querySelectorAll('.korean-text');
                koreanTexts.forEach(text => { text.style.display = translationVisible ? 'block' : 'none'; });
            }
            if (links[chapterIndex]) { links[chapterIndex].classList.add('active'); }
        }

        function toggleTranslation() {
            translationVisible = !translationVisible;
            const koreanTexts = document.querySelectorAll('.korean-text');
            koreanTexts.forEach(text => {
                text.style.display = translationVisible ? 'block' : 'none';
            });
            const toggleBtn = document.getElementById('translation-toggle-btn');
            toggleBtn.classList.toggle('active-btn', translationVisible);
        }

        function buildWordTable() {
            if (!allWords || allWords.length === 0) return;
            const container = document.getElementById('wordListNavigationTemplate');
            const table = document.createElement('table');
            table.className = 'word-table';
            const thead = document.createElement('thead');
            const headerRow = document.createElement('tr');
            const displayConfig = { term: 'term', kor_meaning: '뜻', synonyms: 'synonyms' };
            Object.values(displayConfig).forEach(headerText => {
                const th = document.createElement('th');
                th.textContent = headerText;
                headerRow.appendChild(th);
            });
            thead.appendChild(headerRow);
            table.appendChild(thead);
            const tbody = document.createElement('tbody');
            const headerKeys = Object.keys(displayConfig);
            allWords.forEach(word => {
                const row = document.createElement('tr');
                headerKeys.forEach(key => {
                    const cell = document.createElement('td');
                    let cellData = word[key];
                    if (Array.isArray(cellData)) { cellData = cellData.join(', '); }
                    cell.textContent = cellData || '';
                    row.appendChild(cell);
                });
                tbody.appendChild(row);
            });
            table.appendChild(tbody);
            container.innerHTML = '';
            container.appendChild(table);
        }

        function showWordPopup(wordId) {
            const wordInfo = wordData[wordId];
            if (!wordInfo) { alert('단어 정보를 찾을 수 없습니다: ' + wordId); return; }
            const overlay = document.getElementById('wordPopupOverlay');
            if (!overlay) return;
            const termElement = overlay.querySelector('#popupTerm');
            const meaningElement = overlay.querySelector('#popupMeaning');
            const synonymsElement = overlay.querySelector('#popupSynonyms');
            if (!termElement || !meaningElement || !synonymsElement) { console.error("팝업창의 HTML 요소를 찾을 수 없습니다."); return; }
            termElement.textContent = wordInfo.term;
            meaningElement.innerHTML = '<strong>뜻:</strong> ' + wordInfo.kor_meaning;
            if (wordInfo.synonyms && wordInfo.synonyms.trim()) {
                synonymsElement.innerHTML = '<strong>동의어:</strong> ' + wordInfo.synonyms;
                synonymsElement.style.display = 'block';
            } else {
                synonymsElement.style.display = 'none';
            }
            overlay.classList.add('show');
            document.body.classList.add('no-scroll');
        }
        function closePopup() {
            const overlay = document.getElementById('wordPopupOverlay');
            if (overlay) { 
                overlay.classList.remove('show'); 
                // 바텀 시트가 열려있지 않을 때만 body 스크롤 복원
                if (!bottomSheet.classList.contains('show')) {
                    document.body.classList.remove('no-scroll');
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            buildWordTable(); 
            if (Object.keys(wordData).length > 0 && document.querySelectorAll('.chapter-content').length > 0) {
                showChapter(0);
            }
            
            // ★★★ 복원된 부분: 단어 링크 클릭 이벤트 리스너 ★★★
            document.body.addEventListener('click', function(e) {
                // 시트 내부의 목차 아이템 클릭 처리
                if (e.target.closest('.index-item')) {
                    const item = e.target.closest('.index-item');
                    // showChapter 함수를 호출하기 위해 chapter 인덱스를 찾아야 함.
                    // 간단한 구현을 위해, 모든 index-item을 찾아 몇 번째인지 확인
                    const allItems = Array.from(document.querySelectorAll('#indexNavigationTemplate .index-item'));
                    const chapterIndex = allItems.indexOf(item);
                    if (chapterIndex > -1) {
                        showChapter(chapterIndex);
                    }
                    return;
                }

                // 본문 단어 링크 클릭 처리
                if (e.target.classList.contains('word-link')) {
                    const wordId = e.target.getAttribute('data-word-id');
                    if (wordId) {
                        e.preventDefault();
                        e.stopPropagation();
                        showWordPopup(wordId);
                    }
                }
            });
            
            document.getElementById('wordPopupOverlay').addEventListener('click', function(e) {
                if (e.target === this) {
                    closePopup();
                }
            });

            bottomSheet.addEventListener('click', function(e) {
                if (e.target === this) {
                    closeSheet();
                }
            });

            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closePopup();
                    closeSheet();
                }
            });
        });
    </script>
</body>
</html>